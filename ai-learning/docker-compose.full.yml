services:
  # MySQL データベース
  mysql:
    image: mysql:8.0
    container_name: aiapp-mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: aiapp_dev
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init-db:/docker-entrypoint-initdb.d
      - ./database/my.cnf:/etc/mysql/conf.d/custom.cnf
    networks:
      - aiapp-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  # バックエンド API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: aiapp-backend
    environment:
      - NODE_ENV=development
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=appuser
      - MYSQL_PASSWORD=apppass
      - MYSQL_DATABASE=aiapp_dev
      - PORT=3001
      - OPENAI_ENDPOINT=${OPENAI_ENDPOINT:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_DEPLOYMENT=${OPENAI_DEPLOYMENT:-gpt-4o-mini}
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - aiapp-network
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped

  # フロントエンド
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: aiapp-frontend
    environment:
      - NODE_ENV=development
      - NUXT_PUBLIC_API_BASE=http://backend:3001
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - aiapp-network
    depends_on:
      - backend
    restart: unless-stopped

  # phpMyAdmin (オプション: DB管理用)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: aiapp-phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: password
      PMA_ARBITRARY: 1
    ports:
      - "8080:80"
    networks:
      - aiapp-network
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped

networks:
  aiapp-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local